import { assertEquals } from "@std/assert";

function potionsForMonster(c: string): number {
  return c === "B" ? 1 : c === "C" ? 3 : 0;
}

function solve(input: string): number {
  return Array.from(input)
    .map(potionsForMonster)
    .reduce((acc, cur) => acc + cur, 0);
}

Deno.test("solve", () => {
  assertEquals(solve(`ABBAC`), 5);
});

if (import.meta.main) {
  const INPUT =
    `ABBCABABCACCBCABBCCCAACBCACBCBACAABAABAACAABBBBCCABABBBBAAABAACBAACCCABBCBACABAACCCBCBACBBCACBCBCABABBCAABBCABBAABAACBBCACCACACAABBCAABCBCBCCACACABABBABCBABCBBBCCCCBAAACCABBAACAAABBBBABACBCCBACCAABCBCCCCABABAACACCBAAABCBAACACABBABABBABCABABBCCCBABABBACABACBCCCBACACAABCBBBCCBCCBABACABBACBBACBBBCCCCCCBABABBCABCABBCCBBABCCCCABAAAAABACACCCBBBCBBABBCBBAAACABABACBCCBABBBBCCBABCBCCAABBCBCAABCBACACAABAAABBBACBBCACCACAAACAAAACBAABACCABCAACCCABCCCACCBABAAAACABABBBBAABCBBABBBBACBCBAABCAAABACBCCACAABBABAACCCACAACAACACAABACABBACBAABBACBCAACAACBBBCBBAACBBBBACCCABABBBBABCBBBABAAACCBCBBBAAACBABACCBACCCACBABBCAACCCABCCBCCCAACBBCCBCBCBBABBACBCAACAAAAAACBABCACBBCCAABCAAACBCCBACCACABACBABACAABCCBABAABACACAACBACCABCABACCAACCBCCAAAABAABACBCABCBBCCABCACACCBBCBAAACAABABCACABBBABCCABBAAAACCCBBCCABBCACBBBACCCABCCABACBACBCACBACBAAACBABBCBACBCBCBBAACBACCCACCCCABABACBBCABCBCAAACCCBCAABBBCACCACBBAABCACBAAAABCBBACBBCCACCACACAAABCBCACABCCABBCCBCABBCCCABBBCACAACACCBACCCCCBABACCCBABACCABBBBABBBBCABCBAABBABBCAABBCCCCBBC`;
  console.log(solve(INPUT));
}
